<?xml version="1.0" encoding="UTF-8"?>
<article version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <title>JSync User Guide</title>

    <author>
      <personname><firstname>Java Scrum Team (java-scrum-team@funambol.com)</firstname><surname></surname></personname>

      <affiliation>
        <orgname>Funambol Inc.</orgname>
      </affiliation>
    </author>

    <pubdate>Jan 26th, 2011</pubdate>
  </info>

  <section>
    <title>What is it?</title>

    <para>JSync is a Java command line tool that allows users to synchornize
    directories with a SyncML server. This tool is intended for developers and
    testers.</para>

    <para>JSync is based on the Funambol Java SDK which is a SyncML engine
    written in Java and working on four different platforms:</para>

    <para></para>

    <itemizedlist>
      <listitem>
        <para>Java Standard Edition</para>
      </listitem>

      <listitem>
        <para>Android</para>
      </listitem>

      <listitem>
        <para>BlackBerry</para>
      </listitem>

      <listitem>
        <para>Java MicroEdition</para>
      </listitem>
    </itemizedlist>

    <para>JSync works only on Java standard edition environments.</para>

    <section>
      <title>How can I use it?</title>

      <para>The tool can be executed with the following command:</para>

      <para><emphasis>java -jar JSync.jar</emphasis></para>

      <para>java 1.5 or above is required by the tool. When invoked without
      arguments the tools prints its options. 
      Each invokation triggers the synchronization of a local directory with a
      dabase on the server. The local directory, the server configuration and
      several other parameters can be defined with the proper options.</para>
      
      <para> There are two different ways for specifying arguments: via command line options or via properties
      file.</para>

      <para>Command line arguments are described in the following table.</para>

      <table>
        <title>Command line arguments</title>

        <tgroup cols="3">
          <tbody>
            <row>
              <entry>--url</entry>

              <entry>the sync url</entry>

              <entry>Anything</entry>
            </row>

            <row>
              <entry>--user</entry>

              <entry>the sync username</entry>

              <entry>Anything</entry>
            </row>

            <row>
              <entry>--pwd</entry>

              <entry>the sync password</entry>

              <entry>Anything</entry>
            </row>

            <row>
              <entry>--log</entry>

              <entry>the log level</entry>

              <entry>error, info, debug, trace</entry>
            </row>

            <row>
              <entry>--mode</entry>

              <entry>the sync mode required by the client</entry>

              <entry>fast, slow, refresh_from_client, refresh_from_server,
              one_way_from_client, one_way_from_server</entry>
            </row>

            <row>
              <entry>--uri</entry>

              <entry>the remote URI</entry>

              <entry>Anything</entry>
            </row>

            <row>
              <entry>--raw</entry>

              <entry>do not wrap contents into FileDataObject. This flag is
              typically used when the content being transferred is not a plain
              file but an item of some kind (e.g. a vCard)</entry>

              <entry>N/A</entry>
            </row>

            <row>
              <entry>--type</entry>

              <entry>the mime type to be used for outgoing items. By default
              this is a generci type suitable for file sync, but if the synch
              is meant for other data, then a type can be specified. For
              example the type: "text/x-vcard" can be used to synchronize
              contacts</entry>

              <entry>Anything</entry>
            </row>

            <row>
              <entry>--encoding</entry>

              <entry>specifies how items shall be encoded. By default items
              are base64 encoded, unless this parameter is defined as
              none</entry>

              <entry>none, b64</entry>
            </row>

            <row>
              <entry>--md5</entry>

              <entry>try md5 authentication first</entry>

              <entry>N/A</entry>
            </row>

            <row>
              <entry>--wbxml</entry>

              <entry>use wbxml encoding</entry>

              <entry>N/A</entry>
            </row>

            <row>
              <entry>--dir</entry>

              <entry>the directory to be synchronized (default is
              config / servername / remoteuri / db)</entry>

              <entry>A valid directory path</entry>
            </row>

            <row>
              <entry>--config</entry>

              <entry>allows the user to specify a properties file with the
              configuration (see below for more information)</entry>

              <entry>A valid file path</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para> The same set of configuration parameters can be embedded in a
      single properties file. The keys are the command line argument and the
      value is one of the possible argument value. If an argument has no value
      (e.g. --md5) then the corresponding property must be defined empty (md5=).
      A simple configuration file is as follow:</para>

      <para>user=foo</para>
      <para>pwd=bar</para>
      <para>url=http://my.funambol.com/sync</para>
      <para>log=trace</para>
      <para>uri=card</para>
      <para>raw=</para>
      <para>type=text/x-vcard</para>
      <para>encoding=none</para>

      <para> This configuration file allows the synchronization of the remote DB
      named "card" on the server my.funambol.com. The client will create a
      subtree with the following structure:</para>

      <para> config/my.funambol.com/card/db </para>

      <para> The exchanged vcards are in the db directory, while other
      configuration file for this source are stored in
      config/my.funambol.com/card</para>

      <para>The command line arguments have always precedence over config file
      settings. This means that if the same setting is defined both in the
      config file and as a command line argument, the value used is the one on
      the command line</para>

    </section>

    <section>
      <title>How can I get it?</title>

      <para>The source code is available here:
      https://client-sdk.forge.funambol.org/svn/client-sdk/trunk/java-sdk/</para>

      <para>Building the source code requires ant >= 1.7 and jdk >= 1.5. It is
      necessary to build the common and syncml modules first. Go to the
      common/build/se and run ant. Then change to syncml/build/se and run ant
      again. Finally change to examples/jsync/build and run "ant package". This
      will create a zip file which you can uncompress in a directory. Afterward
      it is possible to sync with my.funambol with the following steps: 1) go
      the directory where the zip was uncompressed. Edit the file
      config/my.funambol.com/config.properties setting the proper credentials.
      Finally you can run java -jar JSync.jar --config
      config/my.funambol.com/config.properties.
    </section>
  </section>
</article>
